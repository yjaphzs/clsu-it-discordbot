/**
 * Compose the Discord webhook payload for a Facebook post.
 * The title is the first sentence of the message, and the body is the rest.
 * If an image is available, it is included in the embed.
 * @param {Object} post - The Facebook post object.
 * @param {number} color - The color of the embed (default: #4289db).
 * @returns {Object} - The Discord webhook payload.
 */
async function composeDiscordWebhookMessage(post, color = 0x4289db) {
    // Fallbacks for missing fields
    const content = post.message || "";
    const url = post.permalink_url || "";
    const image = post.full_picture || null;

    // Extract the title: first sentence before a dot or newline
    let title = content.split(/[\.\n]/)[0].trim();
    if (!title) title = null;

    // Format the timestamp to a more readable format (e.g., "May 25, 2025, 12:35 PM")
    let formattedTime = "";
    if (post.created_time) {
        const date = new Date(post.created_time);
        formattedTime = date.toLocaleString("en-US", {
            year: "numeric",
            month: "short",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            hour12: true,
        });
    }

    // Discord webhook payload structure
    const payload = {
        content: "", // No plain content, everything is in the embed
        embeds: [
            {
                url: url,
                description: `[**${title}**](${url})\n\n${content}`,
                color: color,
                timestamp: post.created_time,
                footer: formattedTime
                    ? { text: `Posted: ${formattedTime}` }
                    : undefined,
            },
        ],
    };

    // If the post has an image, add it to the embed
    if (image) {
        payload.embeds[0].image = { url: image };
    }

    return payload;
}

/**
 * Send a message payload to a Discord webhook URL.
 * @param {string} webhookUrl - The Discord webhook URL.
 * @param {Object} payload - The payload generated by composeDiscordWebhookMessage.
 */
async function sendDiscordWebhookMessage(webhookUrl, payload) {
    const res = await fetch(webhookUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
    });
    if (!res.ok) {
        console.error("Failed to send Discord webhook:", await res.text());
    }
}

module.exports = {
    composeDiscordWebhookMessage,
    sendDiscordWebhookMessage,
};
